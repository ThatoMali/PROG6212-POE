@using PROG6212_POE.Models.Entities
@model List<Claim>
@{
    ViewData["Title"] = "Manage Claims";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="fas fa-tasks me-2"></i>Manage Claims</h1>
    <div class="badge bg-primary fs-6">@Model.Count(c => c.Status == "Pending") Pending</div>
</div>

@if (!Model.Any())
{
    <div class="alert alert-info">
        <i class="fas fa-info-circle me-2"></i>No pending claims to review.
    </div>
}
else
{
    <div class="row">
        @foreach (var claim in Model.Where(c => c.Status == "Pending"))
        {
            <div class="col-md-6 mb-4">
                <div class="card h-100 border-primary">
                    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                        <h6 class="mb-0">Claim #@claim.Id</h6>
                        <span class="badge bg-warning">@claim.Status</span>
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">@claim.Title</h5>
                        <p class="card-text text-muted">@claim.Description</p>

                        <div class="row mb-3">
                            <div class="col-6">
                                <small class="text-muted">Lecturer:</small>
                                <div class="fw-bold">@(claim.LecturerName ?? "Unknown Lecturer")</div>
                            </div>
                            <div class="col-6">
                                <small class="text-muted">Date:</small>
                                <div class="fw-bold">@claim.Date.ToString("dd MMM yyyy")</div>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-4">
                                <small class="text-muted">Hours:</small>
                                <div class="fw-bold">@claim.HoursWorked</div>
                            </div>
                            <div class="col-4">
                                <small class="text-muted">Rate:</small>
                                <div class="fw-bold">R@claim.HourlyRate</div>
                            </div>
                            <div class="col-4">
                                <small class="text-muted">Total:</small>
                                <div class="fw-bold text-success">R@claim.TotalAmount</div>
                            </div>
                        </div>

                        @if (!string.IsNullOrEmpty(claim.Notes))
                        {
                            <div class="mb-3">
                                <small class="text-muted">Notes:</small>
                                <div class="fst-italic">@claim.Notes</div>
                            </div>
                        }
                    </div>
                    <div class="card-footer bg-transparent">
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <button class="btn btn-success me-md-2 btn-approve" data-claim-id="@claim.Id">
                                <i class="fas fa-check me-1"></i>Approve
                            </button>
                            <button class="btn btn-danger btn-reject" data-claim-id="@claim.Id">
                                <i class="fas fa-times me-1"></i>Reject
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            $('.btn-approve').click(function() {
                const claimId = $(this).data('claim-id');
                updateClaimStatus(claimId, 'approve');
            });

            $('.btn-reject').click(function() {
                const claimId = $(this).data('claim-id');
                updateClaimStatus(claimId, 'reject');
            });

            function updateClaimStatus(claimId, action) {
                const url = action === 'approve' ? '/Claims/Approve' : '/Claims/Reject';

                $.post(url, { id: claimId })
                    .done(function(response) {
                        if (response.success) {
                            showToast('Success', response.message, 'success');
                            // Remove the card from view
                            setTimeout(() => {
                                $(`[data-claim-id="${claimId}"]`).closest('.col-md-6').fadeOut();
                            }, 1000);
                        } else {
                            showToast('Error', response.message, 'error');
                        }
                    })
                    .fail(function() {
                        showToast('Error', 'An error occurred while processing your request', 'error');
                    });
            }

            function showToast(title, message, type) {
                // Simple toast implementation
                const toast = $(`<div class="toast align-items-center text-white bg-${type === 'success' ? 'success' : 'danger'} border-0 position-fixed top-0 end-0 m-3" role="alert">
                    <div class="d-flex">
                        <div class="toast-body">
                            <strong>${title}:</strong> ${message}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                    </div>
                </div>`);

                $('body').append(toast);
                const bsToast = new bootstrap.Toast(toast[0]);
                bsToast.show();

                toast.on('hidden.bs.toast', function() {
                    $(this).remove();
                });
            }
        });
    </script>
}